#include <math.h>
#include "character.h"


void drawCharacter(Character character, uint16_t color, uint16_t bgColor, int x, int y) {
	for (int i = 0; i < CHARACTER_SIZE; i++) {
		int dx = x + i % CHARACTER_WIDTH;
		int dy = y + (int) i / CHARACTER_WIDTH;
		drawPixel(dx, dy, character.bits[i] ? color : bgColor);
	}
}

void drawString(char string[], uint16_t color, uint16_t bgColor, int x, int y) {
	for (int i = 0; string[i] != 0; i++) {
		drawCharacter(characters[getCharIndex(string[i])], color, bgColor, x + CHARACTER_WIDTH * i + 1, y);
	}
}

int getCharIndex(char c) {
	return c - ' ';
	/*switch (c) {
	
		//SPACE
		case 32:
			return -1;
		case 45:
		
	}
	if (c == 32)
		return -1;
	
	if (c >= 48 && c <= 59) {
		return c - '0';
	}
	printf("Index: %d\n", c - 'a' + 10);
	return c - 'a' + 10;*/
}

/*
void drawNumber(int number, uint16_t color, uint16_t bgColor, int x, int y) {
	String numberArray = toArray(number);
	for (int i = numberArray.length - 1; i >= 0; i--) {
		drawCharacter(characters[(int) numberArray.array[i]], color, bgColor, x + 8 * (numberArray.length - 2 - i), y);
	}
}


String toArray(int number) {
	int n = log10(number) + 1;
	char *numberArray = calloc(n, sizeof(char));
	for (int i = 0; i < n; i++, number /= 10) {
		numberArray[i] = number % 10;
	}
	String string = {numberArray, n};
	return string;
}
*/
